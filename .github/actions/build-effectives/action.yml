    - shell: bash
      run: |
        set -euo pipefail
        python - <<'PY'
        import os, json, yaml, pathlib, sys

        # .env から
        env_ex = os.environ.get("LARGECAP_EXCLUDE", "[]")
        try:
            ex_list = json.loads(env_ex)
        except Exception:
            ex_list = []
        if not isinstance(ex_list, list):
            ex_list = []

        # 入力パス（改行や空白が混じっても壊れないように三重引用符で受ける）
        map_path = pathlib.Path(r"""${{ inputs.map-file }}""")
        cfg_files = r"""${{ inputs.configs }}""".split()

        mp = yaml.safe_load(map_path.read_text(encoding="utf-8")) if map_path.exists() else {}

        def sym_to_ids(sym):
            v = mp.get(str(sym).upper(), sym)
            return v if isinstance(v, list) else [v]

        ex_ids = sorted({str(x) for s in ex_list for x in sym_to_ids(s) if x})

        for base in cfg_files:
            p = pathlib.Path(base)
            if not p.exists():
                print(f"[skip] {base}")
                continue
            data = yaml.safe_load(p.read_text(encoding="utf-8")) or {}
            cur = data.get("exclude_ids") or []
            cur = [str(x) for x in (cur if isinstance(cur, list) else [cur]) if x]
            merged = sorted({*cur, *ex_ids})
            data["exclude_ids"] = merged
            data["exclude"] = merged
            out = p.with_suffix(".effective.yaml")
            out.write_text(yaml.safe_dump(data, allow_unicode=True, sort_keys=False), encoding="utf-8")
            print(f"[OK] wrote {out} exclude_ids={len(merged)}")
        PY
