name: LargeCap (shared)

on:
  workflow_call:
    inputs:
      run_strength:      { type: boolean, default: false }   # 強弱ランキングPNGも作るか
      send_discord:      { type: boolean, default: true }    # Discord送信
      push_changes:      { type: boolean, default: true }    # 生成物をcommit/push
      interval_label:    { type: string,  default: '15m' }   # ログ/コミットメッセージ用
    secrets:
      DISCORD_WEBHOOK:   { required: false }

jobs:
  run:
    runs-on: ubuntu-latest
    permissions: { contents: write }

    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }     # fast-forward失敗対策

      - uses: actions/setup-python@v5
        with: { python-version: '3.11', cache: 'pip' }

      - name: Install yq
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
        # shellcheck disable=SC2148
          chmod +x /usr/local/bin/yq
          /usr/local/bin/yq --version

      # ===== .env 読み込み＆除外リスト注入 =====
      - name: Load env & inject excludes
        shell: bash
        run: |
          set -euo pipefail
          ENV_FILE="${GITHUB_WORKSPACE}/.github/workflows/largecap-watch.env"
          [ -f "$ENV_FILE" ] || { echo "::error::env file not found: $ENV_FILE"; exit 1; }

          # .env → GITHUB_ENV（CRLF削除 & コメント/空行除外, かつ DISCORD_WEBHOOK 行は除外）
          sed -e 's/\r$//' "$ENV_FILE" \
            | grep -Ev '^[[:space:]]*(#|$)|^DISCORD_WEBHOOK=' >> "$GITHUB_ENV"

          echo "[LOG] LARGECAP_EXCLUDE=${LARGECAP_EXCLUDE:-[]}"

          # JSONとして妥当化（壊れていたら []）
          EX_JSON="$(
          python - <<'PY'
          import os, json, sys
          ex = os.environ.get('LARGECAP_EXCLUDE','[]')
          try: json.loads(ex)
          except Exception: ex = '[]'
          sys.stdout.write(ex)
          PY
          )"
          export EX_JSON

          # symbol→id マップ（一部のみ・必要に応じ追加）
          cat >/tmp/symbol_to_id.yaml <<'YAML'
          USDE: ethena-usde
          WETH: weth
          WEETH: wrapped-eeth
          WBETH: wrapped-beacon-eth
          WSTETH: wrapped-steth
          STETH: staked-ether
          USDT: tether
          USDC: usd-coin
          BUSD: binance-usd
          DAI: dai
          FDUSD: first-digital-usd
          PYUSD: paypal-usd
          EURC: euro-coin
          FRAX: frax
          USDD: usdd
          LEO: leo-token
          CBBTC: coinbase-wrapped-btc
          SUSDE: ethena-staked-usde
          UNISTETH: unistake
          WBT:
            - wrapped-bitcoin
            - whitebit
          BSC-USD: binance-bridged-usdt-bnb-smart-chain
          USDS:
            - sperax-usd
            - usds
          YAML

          # effective生成（exclude_idsへ反映）
          for base in config_largecap.yaml config_largecap_btc.yaml config_largecap_compare.yaml; do
            [ -f "$base" ] || { echo "skip $base"; continue; }
            out="${base%.yaml}.effective.yaml"
            echo "making $out from $base"

            /usr/local/bin/yq '
              .exclude_symbols = (.exclude_symbols // [])
                                 + ((env(EX_JSON) // "[]") | fromjson)
              |
              .exclude_ids = (.exclude_ids // [])
                             + (
                                 (env(EX_JSON) // "[]") | fromjson
                                 | map( ( . as $s | (load("/tmp/symbol_to_id.yaml")[$s] // "") ) )
                                 | flatten | map(select(. != "")) | unique
                               )
              |
              .exclude = .exclude_ids
            ' "$base" > "$out"

            echo -n "$out => exclude_ids: "; /usr/local/bin/yq '.exclude_ids' "$out"
          done

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || pip install -U requests pyyaml pandas matplotlib

      # ===== 比較（USD×BTC） =====
      - name: Run compare
        run: python compare_strength.py --config config_largecap_compare.effective.yaml

      # ===== 強弱ランキング（任意） =====
      - name: Run USD strength
        if: ${{ inputs.run_strength }}
        run: python largecap_strength.py --config config_largecap.effective.yaml

      - name: Run BTC strength
        if: ${{ inputs.run_strength }}
        run: |
          sleep 8  # 429回避
          python largecap_strength_btc.py --config config_largecap_btc.effective.yaml

      # ===== Discordへ送信（任意） =====
      - name: Send charts to Discord
        if: ${{ inputs.send_discord && secrets.DISCORD_WEBHOOK != '' }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          # webhookを念のため整形
          W=$(printf '%s' "${DISCORD_WEBHOOK}" | tr -d '\r' \
               | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' \
                     -e "s/^'//" -e "s/'$//" -e 's/^"//' -e 's/"$//' )

          # 送る候補
          cmp=(**/largecap_usd_vs_btc.png)
          tr1=(**/score_trails_usd.png **/score_trails_usd_*.png)
          tr2=(**/score_trails_btc.png **/score_trails_btc_*.png)
          s_usd=(**/largecap_strength.png **/largecap_strength_*.png)
          s_btc=(**/largecap_strength_btc.png **/largecap_strength_btc_*.png)

          # ファイル優先順位（同名があれば日時付きを優先）
          pick() { for f in "$@"; do [ -f "$f" ] && { echo "$f"; return; }; done; }

          png1=$(pick "${cmp[@]}")    || true
          png2=$(pick "${tr1[@]}")    || true
          png3=$(pick "${tr2[@]}")    || true
          png4=$(pick "${s_usd[@]}")  || true
          png5=$(pick "${s_btc[@]}")  || true

          # payload
          msg="LargeCap ${ { inputs.interval_label } } — $(date -u +'%Y-%m-%d %H:%M UTC')"
          payload=$(printf '{"content":"%s"}' "$msg")

          # 何も無ければスキップ
          [ -n "${png1}${png2}${png3}${png4}${png5}" ] || { echo "no images; skip"; exit 0; }

          # 最高5枚まで添付（順番固定）
          curl -sS -f -X POST \
            -F "payload_json=$payload" \
            ${png1:+-F "file1=@${png1};type=image/png"} \
            ${png2:+-F "file2=@${png2};type=image/png"} \
            ${png3:+-F "file3=@${png3};type=image/png"} \
            ${png4:+-F "file4=@${png4};type=image/png"} \
            ${png5:+-F "file5=@${png5};type=image/png"} \
            "$W"

      # ===== 生成物をコミット（任意） =====
      - name: Commit & push artifacts
        if: ${{ inputs.push_changes }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Update artifacts (${{ inputs.interval_label }})" || exit 0
          git pull --rebase
          git push
