name: LargeCap (shared)

on:
  workflow_call:
    inputs:
      send_discord:
        type: boolean
        default: true
      python-version:
        type: string
        default: '3.11'
    secrets:
      DISCORD_WEBHOOK:
        required: false

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1) リポジトリ取得
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Python 準備
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: pip

      # 3) yq（念のため）
      - name: Install yq
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          /usr/local/bin/yq --version

      # 4) 除外リストを注入して *.effective.yaml を生成（← ここが“アクションの呼び出し”）
      #    事前に .github/actions/build-effectives/action.yml を置いてある前提
      - name: Build effective configs (inject excludes)
        uses: ./.github/actions/build-effectives
        with:
          env_file: .github/workflows/largecap-watch.env
          bases: |
            config_largecap.yaml
            config_largecap_btc.yaml
            config_largecap_compare.yaml

      # 5) 依存
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || pip install -U requests pyyaml pandas matplotlib

      # 6) 強弱（USD）
      - name: Run USD strength (15m)
        run: |
          python largecap_strength.py --config config_largecap.effective.yaml

      # 7) 429回避
      - name: Pause to avoid 429
        run: sleep 8

      # 8) 強弱（BTC建て）
      - name: Run BTC strength (15m)
        run: |
          python largecap_strength_btc.py --config config_largecap_btc.effective.yaml

      # 9) USD×BTC 比較（トレイルも内部で更新される想定）
      - name: Run compare
        run: |
          python compare_strength.py --config config_largecap_compare.effective.yaml

      # 10) Discord 送信
      - name: Send charts to Discord
        if: ${{ inputs.send_discord }}  # ← secrets を if から外す
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        shell: bash
        run: |
          set -euo pipefail
          # 空ならここで安全にスキップ
          if [ -z "${DISCORD_WEBHOOK:-}" ]; then
            echo "::notice::DISCORD_WEBHOOK is empty; skip sending."
            exit 0
          fi

          shopt -s globstar nullglob
          usd=(**/largecap_usd_vs_btc.png)
          t1=(**/score_trails_usd.png)
          t2=(**/score_trails_btc.png)
          : "${usd:?missing usd_vs_btc.png}"
          : "${t1:?missing score_trails_usd.png}"
          : "${t2:?missing score_trails_btc.png}"

          # 念のため整形
          W=$(printf '%s' "${DISCORD_WEBHOOK}" | tr -d '\r' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
          msg="LargeCap 15m — $(date -u +'%Y-%m-%d %H:%M UTC')"
          payload=$(printf '{"content":"%s"}' "$msg")

          curl -sS -f -X POST \
            -F "payload_json=$payload" \
            -F "file1=@${usd[0]};type=image/png" \
            -F "file2=@${t1[0]};type=image/png" \
            -F "file3=@${t2[0]};type=image/png" \
            "$W"

      # 11) 生成物をコミット
      - name: Commit & push artifacts
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=()
          for f in largecap_*.png largecap_*.csv score_trails_*.png data/score_trails_*.csv; do
            [[ -e "$f" ]] && files+=("$f")
          done
          (( ${#files[@]} )) || { echo "No artifacts to commit"; exit 0; }
          echo "Will commit: ${files[*]}"
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git add -- "${files[@]}"
          git commit -m "Update trails $(date -u +'%Y-%m-%dT%H:%MZ')" || exit 0
          git pull --rebase
          git push
