name: Trails Feeder (15m)

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'   # 15分ごと

concurrency:
  group: largecap-15m
  cancel-in-progress: true

jobs:
  trails:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      MPLBACKEND: 'Agg'
      LARGECAP_EXCLUDE: '[]'                       # 未設定でも [] に
      WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}   # ← ここを統一

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # compare_strength.py は PyYAML / pandas / matplotlib / requests 等が必要
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -U pyyaml requests pandas numpy matplotlib

      - name: Install yq
        run: |
          sudo curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Load env & inject excludes
        shell: bash
        run: |
          set -euo pipefail
          ENV_FILE="${GITHUB_WORKSPACE}/.github/workflows/largecap-watch.env"
          [ -f "$ENV_FILE" ] || { echo "::error::env file not found: $ENV_FILE"; exit 1; }
      
          # .env → GITHUB_ENV（コメント/空行と DISCORD_WEBHOOK を除外）
          sed -e 's/\r$//' "$ENV_FILE" \
            | grep -Ev '^[[:space:]]*($|#)|^(DISCORD_WEBHOOK|WEBHOOK)=' >> "$GITHUB_ENV"

      
          echo "[LOG] LARGECAP_EXCLUDE=${LARGECAP_EXCLUDE:-[]}"
      
          # ←← ここから「cat >> 一時ファイル」方式（YAMLのインデントに左右されない）
          cat > /tmp/update_excludes.py <<'PY'
          import os, json, re, yaml, pathlib
      
          # env → 配列（壊れていれば []）
          try:
              ex = json.loads(os.environ.get("LARGECAP_EXCLUDE", "[]") or "[]")
              if not isinstance(ex, list):
                  ex = []
          except Exception:
              ex = []
          
          files = [
              "config_largecap.yaml",
              "config_largecap_btc.yaml",
              "config_largecap_compare.yaml",
              "config_largecap_compare_scheduler.yaml",
          ]
          
          for f in files:
              p = pathlib.Path(f)
              if not p.exists():
                  continue
              txt = p.read_text(encoding="utf-8")
              # 「exclude_ids:\n[]」の崩れを補正
              txt = re.sub(r'(?m)^exclude_ids:\s*\n\[\]\s*(?=\n|$)', 'exclude_ids: []', txt)
          
              data = yaml.safe_load(txt) or {}
              data["exclude_ids"] = ex
              p.write_text(
                  yaml.safe_dump(data, allow_unicode=True, sort_keys=False),
                  encoding="utf-8"
              )
              print("[OK] updated", f)
          PY
          
              python /tmp/update_excludes.py



      - name: Run compare (15m)
        shell: bash
        run: |
          set -euo pipefail
          python compare_strength.py --config config_largecap_compare.yaml

      - name: List artifacts (debug)
        if: ${{ env.DEBUG == '1' || failure() }}
        shell: bash
        run: |
          set -euo pipefail
          echo "PWD=$(pwd)"
          shopt -s globstar nullglob
          for f in **/largecap_usd_vs_btc.png **/score_trails_*.png **/largecap_compare.csv **/data/score_trails_*.csv; do
            [ -e "$f" ] && ls -lh "$f"
          done


      - name: Send 3 charts to Discord (15m)
        if: ${{ env.WEBHOOK }}
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          usd=(**/largecap_usd_vs_btc.png)
          t1=(**/score_trails_usd.png)
          t2=(**/score_trails_btc.png)
          : "${usd:?missing usd_vs_btc.png}"
          : "${t1:?missing score_trails_usd.png}"
          : "${t2:?missing score_trails_btc.png}"
          # 念のためトリム（CR/外側クォート）
          W=$(printf '%s' "${WEBHOOK}" | tr -d '\r' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e "s/^'//" -e "s/'$//" -e 's/^"//' -e 's/"$//')
          msg="LargeCap 15m — $(date -u +'%Y-%m-%d %H:%M UTC')"
          payload=$(printf '{"content":"%s"}' "$msg")
          curl -sS -f -X POST \
            -F "payload_json=$payload" \
            -F "file1=@${usd[0]};type=image/png" \
            -F "file2=@${t1[0]};type=image/png" \
            -F "file3=@${t2[0]};type=image/png" \
            "$W"


      - name: Debug webhook
        run: |
          if [ -n "${WEBHOOK:-}" ]; then echo "WEBHOOK: set"; else echo "WEBHOOK: EMPTY"; fi


          
      - name: Commit & push trails
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(**/largecap_usd_vs_btc.png **/score_trails_*.png **/largecap_compare.csv **/data/score_trails_*.csv)
          (( ${#files[@]} )) || { echo "No artifacts to commit"; exit 0; }
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git add -- "${files[@]}"
          if git diff --cached --quiet; then
            echo "Nothing to commit"; exit 0
          fi
          git commit -m "Update trails $(date -u +'%Y-%m-%dT%H:%MZ')"
          git push
