name: Trails Feeder (15m)

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'   # 15分ごと

concurrency:
  group: trails-feeder
  cancel-in-progress: false

jobs:
  trails:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      MPLBACKEND: 'Agg'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install yq
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Load env & inject excludes
        shell: bash
        run: |
          set -euo pipefail

          # .env を読み込む（無ければスキップ）
          set -a
          source .github/workflows/largecap-watch.env 2>/dev/null || true
          set +a

          # LARGECAP_EXCLUDE を Python で検証し、ダメなら [] にフォールバック
          EX_JSON="$(
            python - <<'PY'
            
      import os, json
      ex = os.environ.get("LARGECAP_EXCLUDE", "[]")
      try:
          json.loads(ex)
      except Exception:
          ex = "[]"
      print(ex)
      PY
            )"
            echo "Using EXCLUDE: ${EX_JSON}"

          # この 3 つの YAML を基に .effective.yaml を作る（exclude_ids を差し込み/置換）
          FILES="config_largecap.yaml config_largecap_btc.yaml config_largecap_compare.yaml"
          for f in $FILES; do
            dst="${f%.yaml}.effective.yaml"
            if grep -qE '^[[:space:]]*exclude_ids:' "$f"; then
              # 既存行を置換
              sed -E "s@^[[:space:]]*exclude_ids:.*@exclude_ids: ${EX_JSON}@" "$f" > "$dst"
            else
              # なければ末尾に追記
              printf "%s\nexclude_ids: %s\n" "$(cat "$f")" "$EX_JSON" > "$dst"
            fi
            echo "made $dst"
          done

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || pip install -U pandas matplotlib pyyaml requests

      - name: Update trails + run compare (15m)
        run: |
          set -euo pipefail
          /usr/local/bin/yq '
            .exclude_ids = (
              ((.exclude_ids // []) + ((env(LARGECAP_EXCLUDE) | fromjson) // []))
            ) |
            .exclude = .exclude_ids
          ' config_largecap_compare.yaml > config_largecap_compare.effective.yaml

          # 1) compare を実行（USD×BTC 散布図とCSVを作成）
          python compare_strength.py --config config_largecap_compare.effective.yaml

          # タイムスタンプ付きコピー（JST）
          STAMP=$(TZ=Asia/Tokyo date +%Y%m%d_%H%M)
          [ -f largecap_compare.csv ] && cp largecap_compare.csv "largecap_compare_${STAMP}.csv" || true
          [ -f largecap_usd_vs_btc.png ] && cp largecap_usd_vs_btc.png "largecap_usd_vs_btc_${STAMP}.png" || true

          # 2) trails を更新＆描画（既存のスクリプトを使う）
          python history_aggregate.py
          python plot_score_trails.py --metric btc --hours 168 --topn 20 --smooth 3
          python plot_score_trails.py --metric usd --hours 168 --topn 20 --smooth 3

      - name: Commit & push trails
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # ← ここを“movers_*”ではなく trails の実ファイルに
          git add data/score_trails_*.csv || true
          git add score_trails_*.png     || true

          # （必要なら比較PNG/CSVも一緒に）
          git add largecap_usd_vs_btc_*.png  || true

          echo "--- staged changes ---"
          git status --porcelain

          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "trails: $(TZ=Asia/Tokyo date +'%F %H:%M JST')"
            git push
          fi
