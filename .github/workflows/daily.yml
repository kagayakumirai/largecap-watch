name: LargeCap Daily to Discord

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"   # 09:00 JST

jobs:
  run-and-send:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      MPLBACKEND: Agg
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || pip install -U requests pyyaml pandas matplotlib
      - name: Debug strength config (USD/BTC)
        run: |
          echo '--- BEGIN config_largecap.yaml ---'
          cat config_largecap.yaml || true
          echo
          echo '--- BEGIN config_largecap_btc.yaml ---'
          cat config_largecap_btc.yaml || true
          echo
          python - <<'PY'
          import yaml, pathlib
          for p in ("config_largecap.yaml","config_largecap_btc.yaml"):
              try:
                  cfg=yaml.safe_load(pathlib.Path(p).read_text(encoding="utf-8"))
              except Exception as e:
                  print(f"{p} could not read: {e}")
                  continue
              ids = cfg.get("universe_ids")
              print(
                  f"[{p}] universe_mode={cfg.get('universe_mode')} "
                  f"top_mcap_n={cfg.get('top_mcap_n')} top_n={cfg.get('top_n')} "
                  f"ids_type={type(ids).__name__} ids_len={(len(ids) if isinstance(ids,(list,tuple)) else None)}"
              )
          PY

      - name: Run USD strength (top_n from YAML)
        run: |
          python largecap_strength.py --config config_largecap.yaml
          ls -l largecap_strength.*
      - name: Pause to avoid 429
        run: sleep 12
      
      - name: Run BTC strength (top_n from YAML)
        run: |
          python largecap_strength_btc.py --config config_largecap_btc.yaml
          ls -l largecap_strength_btc.*
      
      # USD/BTC strength の後
      - name: Pause to avoid 429
        run: |
          # 60〜90秒のランダム待機（同時刻集中をズラす）
          python - <<'PY'
      import random, time
      wait = 60 + random.randint(0,30)
      print(f"sleep {wait}s to avoid 429"); time.sleep(wait)
      PY
      
      - name: Pause to avoid 429
        run: sleep 12
      
      - name: Run compare & send to Discord (with trails)
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python run_compare_scheduler.py --repeat 1 --trails --hours 168 --topn 20 --smooth 5 \
            --webhook-url "$WEBHOOK" --label "LargeCap Daily (USD×BTC)"

      - name: Send strength charts to Discord (optional)
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "${WEBHOOK}" ]; then
            echo "WEBHOOK is empty; skip Discord upload."
            exit 0
          fi
          for f in largecap_strength.png largecap_strength_btc.png; do
            if [ ! -f "$f" ]; then
              echo "$f not found; skip Discord upload."
              exit 0
            fi
          done
          curl -sS -X POST \
            -F 'payload_json={"content":"Strength (USD & BTC) — top_n from YAML"}' \
            -F "file1=@largecap_strength.png;type=image/png" \
            -F "file2=@largecap_strength_btc.png;type=image/png" \
            "$WEBHOOK"

      - name: Save snapshot CSVs to repo
        run: |
          mkdir -p data
          ls -1 largecap_compare_*.csv 2>/dev/null | xargs -I{} cp "{}" data/ || true
          ls -1 largecap_strength*.csv 2>/dev/null | xargs -I{} cp "{}" data/ || true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/*.csv || true
          git commit -m "snapshot: $(date -u +%F_%H%M)" || echo "No changes"
          git push || true

      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          if-no-files-found: ignore
          retention-days: 14
          path: |
            largecap_strength.csv
            largecap_strength.png
            largecap_strength_btc.csv
            largecap_strength_btc.png
            largecap_compare_*.csv
            score_trails_*.png
