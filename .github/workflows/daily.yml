name: LargeCap Daily to Discord

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"   # 09:00 JST

jobs:
  run-and-send:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      MPLBACKEND: Agg

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # yq をインストール
      - name: Install yq
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          /usr/local/bin/yq --version

      # .env を以降の全ステップで使えるように登録
      - name: Export .env to GITHUB_ENV
        run: |
          sed -e 's/\r$//' .github/workflows/largecap-watch.env \
            | grep -v '^\s*#' >> "$GITHUB_ENV"
          echo "LARGECAP_EXCLUDE=${LARGECAP_EXCLUDE:-UNSET}"

      - name: Build effective configs (force exclude_ids)
        run: |
          set -euo pipefail

          # シンボル → CoinGecko id の対応表（必要に応じて追加）
          cat >/tmp/symbol_to_id.yaml <<'YAML'
          USDE: ethena-usde
          WETH: weth
          WEETH: ether-fi-staked-eth
          WBETH: wrapped-beacon-eth
          WSTETH: wrapped-steth
          USDT: tether
          USDC: usd-coin
          BUSD: binance-usd
          DAI: dai
          FDUSD: first-digital-usd
          PYUSD: paypal-usd
          EURC: euro-coin
          FRAX: frax
          USDD: usdd
          # ← USDS は複数の id をまとめて指定
          USDS:
            - sperax-usd        # Sperax USD
            - usds              # TheStandard USD
          YAML

          for base in config_largecap.yaml config_largecap_btc.yaml config_largecap_compare.yaml; do
            [ -f "$base" ] || { echo "skip $base"; continue; }
            out="${base%.yaml}.effective.yaml"
            echo "making $out from $base"

            /usr/local/bin/yq '
              # 1) .env のシンボル（大文字前提）をそのまま記録（将来用）
              .exclude_symbols = (.exclude_symbols // [])
                                 + ((env(LARGECAP_EXCLUDE) // "[]") | fromjson) |
              # 2) シンボルを対応表で id に引き当てる（配列/単一どちらでもOK）→ flatten → unique
              .exclude_ids = (.exclude_ids // [])
                             + (
                                (env(LARGECAP_EXCLUDE) // "[]") | fromjson
                                 | map( (load("/tmp/symbol_to_id.yaml")[.] // empty) )
                                 | flatten
                               )
                             | unique
              |
              .exclude = .exclude_ids
            ' "$base" > "$out"
                USDS: sperax-usd
                YAML

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || pip install -U requests pyyaml pandas matplotlib

      - name: Run USD strength (top_n from YAML)
        run: |
          python largecap_strength.py --config config_largecap.effective.yaml
          ls -l largecap_strength.*

      - name: Pause to avoid 429
        run: sleep 12

      - name: Run BTC strength (top_n from YAML)
        run: |
          python largecap_strength_btc.py --config config_largecap_btc.effective.yaml
          ls -l largecap_strength_btc.*

      # USD/BTC strength の後
      - name: Pause to avoid 429 (random)
        run: |
          python - <<'PY'
          import random, time
          wait = 60 + random.randint(0,30)
          print(f"sleep {wait}s to avoid 429"); time.sleep(wait)
          PY

      - name: Run compare & send to Discord (simple, once a day)
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          LABEL="LargeCap Daily (USD×BTC) — $(TZ=Asia/Tokyo date +'%Y-%m-%d')"
          python compare_strength.py \
            --config config_largecap_compare.effective.yaml


      # 作られた PNG / CSV を確認（デバッグ）
      - name: List generated PNG/CSV
        run: |
          ls -l *.png *.csv || true

      - name: Send quadrant (compare) chart to Discord
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "$WEBHOOK" ]; then
            echo "WEBHOOK is empty; skip Discord upload."; exit 0
          fi
          png=$(ls -t largecap_usd_vs_btc_*.png 2>/dev/null | head -1 || echo largecap_usd_vs_btc.png)
          if [ -f "$png" ]; then
            echo "Uploading $png"
            curl -sS -X POST \
              -F 'payload_json={"content":"USD×BTC quadrant (latest)"}' \
              -F "file1=@${png};type=image/png" \
              "$WEBHOOK"
          else
            echo "Quadrant PNG not found. skip."
          fi

      - name: Send strength charts to Discord (optional)
        env:
          WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "${WEBHOOK}" ]; then
            echo "WEBHOOK is empty; skip Discord upload."; exit 0
          fi
          for f in largecap_strength.png largecap_strength_btc.png; do
            [ -f "$f" ] || { echo "$f not found; skip."; exit 0; }
          done
          curl -sS -X POST \
            -F 'payload_json={"content":"Strength (USD & BTC) — top_n from YAML"}' \
            -F "file1=@largecap_strength.png;type=image/png" \
            -F "file2=@largecap_strength_btc.png;type=image/png" \
            "$WEBHOOK"

      - name: Save snapshot CSVs to repo
        run: |
          mkdir -p data
          ls -1 largecap_compare_*.csv 2>/dev/null | xargs -I{} cp "{}" data/ || true
          ls -1 largecap_strength*.csv 2>/dev/null | xargs -I{} cp "{}" data/ || true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/*.csv || true
          git commit -m "snapshot: $(date -u +%F_%H%M)" || echo "No changes"
          git push || true

      - uses: actions/upload-artifact@v4
        with:
          name: outputs
          if-no-files-found: ignore
          retention-days: 14
          path: |
            largecap_strength.csv
            largecap_strength.png
            largecap_strength_btc.csv
            largecap_strength_btc.png
            largecap_compare_*.csv
            score_trails_*.png
